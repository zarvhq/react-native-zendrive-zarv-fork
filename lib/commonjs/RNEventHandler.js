var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _reactNative=require("react-native");var _Events=require("./sdk/Events");var callbackEventMappings={'com.zendrive.onDriveStart':_Events.ZendriveCallbackEventKind.ON_DRIVE_START,'com.zendrive.onDriveResume':_Events.ZendriveCallbackEventKind.ON_DRIVE_RESUME,'com.zendrive.onDriveEnd':_Events.ZendriveCallbackEventKind.ON_DRIVE_END,'com.zendrive.onDriveAnalyzed':_Events.ZendriveCallbackEventKind.ON_DRIVE_ANALYZED,'com.zendrive.onAccident':_Events.ZendriveCallbackEventKind.ON_ACCIDENT,'com.zendrive.onPotentialAccident':_Events.ZendriveCallbackEventKind.ON_POTENTIAL_ACCIDENT,'com.zendrive.onSettingsChanged':_Events.ZendriveCallbackEventKind.ON_SETTINGS_CHANGED,'com.zendrive.onLocationApproved':_Events.ZendriveCallbackEventKind.ON_LOCATION_APPROVED,'com.zendrive.onLocationDenied':_Events.ZendriveCallbackEventKind.ON_LOCATION_DENIED,'com.zendrive.onActivityApproved':_Events.ZendriveCallbackEventKind.ON_ACTIVITY_APPROVED,'com.zendrive.onActivityDenied':_Events.ZendriveCallbackEventKind.ON_ACTIVITY_DENIED,'com.zendrive.onBootCompleted':_Events.ZendriveCallbackEventKind.ON_BOOT_COMPLETED,'com.zendrive.onMyPackageReplaced':_Events.ZendriveCallbackEventKind.ON_MY_PACKAGE_REPLACED};var RNEventHandler=function(){function RNEventHandler(){(0,_classCallCheck2.default)(this,RNEventHandler);this.emitter=_reactNative.Platform.OS==='ios'?new _reactNative.NativeEventEmitter(_reactNative.NativeModules.ZendriveEventEmitter):_reactNative.DeviceEventEmitter;this.listeners=new Map();}(0,_createClass2.default)(RNEventHandler,[{key:"register",value:function register(callbackHandler){var _this=this;var _loop=function _loop(){if(callbackEventMappings.hasOwnProperty(eventName)){var sdkEvent=callbackEventMappings[eventName];var listener=function listener(event){callbackHandler({kind:sdkEvent,event:event});};_this.listeners.set(eventName,listener);_this.emitter.addListener(eventName,listener);}};for(var eventName in callbackEventMappings){_loop();}}},{key:"unregister",value:function unregister(){for(var eventName in callbackEventMappings){if(callbackEventMappings.hasOwnProperty(eventName)){var listener=this.listeners.get(eventName);if(listener){this.emitter.removeAllListeners(eventName);}this.listeners.delete(eventName);}}}}]);return RNEventHandler;}();exports.default=RNEventHandler;
//# sourceMappingURL=RNEventHandler.js.map