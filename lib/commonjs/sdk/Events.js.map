{"version":3,"names":["ZendriveCallbackEventKind"],"sources":["Events.ts"],"sourcesContent":["import {\n  DriveStartInfo,\n  DriveResumeInfo,\n  EstimatedDriveInfo,\n  AnalyzedDriveInfo,\n  AccidentInfo,\n} from './Infos';\n\nexport enum ZendriveCallbackEventKind {\n  ON_DRIVE_START = 'on-drive-start',\n  ON_DRIVE_RESUME = 'on-drive-resume',\n  ON_DRIVE_END = 'on-drive-end',\n  ON_DRIVE_ANALYZED = 'on-drive-analyzed',\n  ON_ACCIDENT = 'on-accident',\n  ON_POTENTIAL_ACCIDENT = 'on-potential-accident',\n  /**\n   * Android only\n   * This event is sent when android sdk detects changes in settings that might limit the normal working of the sdk.\n   */\n  ON_SETTINGS_CHANGED = 'on-settings-changed',\n  /**\n   * Android only\n   * This event is sent when android completes a boot. This callbacks should be used for setting up Zendrive after boot.\n   */\n  ON_BOOT_COMPLETED = 'on-boot-completed',\n  /**\n   * Android only\n   * This event is sent when your application package is replaced on the device. This callbacks should be used for setting up Zendrive after app upgrade.\n   */\n  ON_MY_PACKAGE_REPLACED = 'on-my-package-replaced',\n  /**\n   * ios only\n   */\n  ON_LOCATION_APPROVED = 'on-location-approved',\n  /**\n   * ios only\n   */\n  ON_LOCATION_DENIED = 'on-location-denied',\n  /**\n   * ios only\n   */\n  ON_ACTIVITY_APPROVED = 'on-activity-approved',\n  /**\n   * ios only\n   */\n  ON_ACTIVITY_DENIED = 'on-activity-denied',\n}\n\nexport type ZendriveOnDriveStartEvent = {\n  kind: ZendriveCallbackEventKind.ON_DRIVE_START;\n  event: DriveStartInfo;\n};\n\nexport type ZendriveOnDriveResumeEvent = {\n  kind: ZendriveCallbackEventKind.ON_DRIVE_RESUME;\n  event: DriveResumeInfo;\n};\n\nexport type ZendriveOnDriveEndEvent = {\n  kind: ZendriveCallbackEventKind.ON_DRIVE_END;\n  event: EstimatedDriveInfo;\n};\n\nexport type ZendriveOnDriveAnalyzedEvent = {\n  kind: ZendriveCallbackEventKind.ON_DRIVE_ANALYZED;\n  event: AnalyzedDriveInfo;\n};\n\nexport type ZendriveOnAccidentEvent = {\n  kind: ZendriveCallbackEventKind.ON_ACCIDENT;\n  event: AccidentInfo;\n};\n\nexport type ZendriveOnPotentialAccidentEvent = {\n  kind: ZendriveCallbackEventKind.ON_POTENTIAL_ACCIDENT;\n  event: AccidentInfo;\n};\n\nexport type ZendriveOnSettingsChangedEvent = {\n  kind: ZendriveCallbackEventKind.ON_SETTINGS_CHANGED;\n  event: {\n    errorsFound: boolean;\n    warningsFound: boolean;\n  };\n};\n\n/**\n * Event received when location is approved\n * Available for iOS only. See [[ZendriveConfiguration.managesLocationPermission]] & [[ZendriveConfiguration.managesActivityPermission]]\n */\nexport type ZendriveOnActivityApprovedEvent = {\n  kind: ZendriveCallbackEventKind.ON_ACTIVITY_APPROVED;\n  event: {};\n};\n\n/**\n * Event received when location is denied\n * Available for iOS only. See [[ZendriveConfiguration.managesLocationPermission]] & [[ZendriveConfiguration.managesActivityPermission]]\n */\nexport type ZendriveOnActivityDeniedEvent = {\n  kind: ZendriveCallbackEventKind.ON_ACTIVITY_DENIED;\n  event: {};\n};\n\n/**\n * Event received when location is approved\n * Available for iOS only. See [[ZendriveConfiguration.managesLocationPermission]] & [[ZendriveConfiguration.managesActivityPermission]]\n */\nexport type ZendriveOnLocationApprovedEvent = {\n  kind: ZendriveCallbackEventKind.ON_LOCATION_APPROVED;\n  event: {};\n};\n\n/**\n * Event received when location is denied\n * Available for iOS only. See [[ZendriveConfiguration.managesLocationPermission]] & [[ZendriveConfiguration.managesActivityPermission]]\n */\nexport type ZendriveOnLocationDeniedEvent = {\n  kind: ZendriveCallbackEventKind.ON_LOCATION_DENIED;\n  event: {};\n};\n\n/**\n * See [[ZendriveCallbackEventKind#ON_BOOT_COMPLETED]]\n */\nexport type ZendriveOnBootCompleted = {\n  kind: ZendriveCallbackEventKind.ON_BOOT_COMPLETED;\n  event: {};\n};\n\n/**\n * See [[ZendriveCallbackEventKind#ON_BOOT_COMPLETED]]\n */\nexport type ZendriveOnMyPackageReplaced = {\n  kind: ZendriveCallbackEventKind.ON_MY_PACKAGE_REPLACED;\n  event: {};\n};\n\nexport type ZendriveCallbackEvent =\n  | ZendriveOnDriveStartEvent\n  | ZendriveOnDriveResumeEvent\n  | ZendriveOnDriveEndEvent\n  | ZendriveOnDriveAnalyzedEvent\n  | ZendriveOnAccidentEvent\n  | ZendriveOnPotentialAccidentEvent\n  | ZendriveOnSettingsChangedEvent\n  | ZendriveOnLocationApprovedEvent\n  | ZendriveOnLocationDeniedEvent\n  | ZendriveOnActivityApprovedEvent\n  | ZendriveOnActivityDeniedEvent\n  | ZendriveOnBootCompleted\n  | ZendriveOnMyPackageReplaced;\n\nexport type ZendriveCallbackEventHandler = (\n  event: ZendriveCallbackEvent\n) => void;\n"],"mappings":"qGAQYA,0BAAyB,uEAAzBA,yBAAyB,EAAzBA,yBAAyB,oCAAzBA,yBAAyB,sCAAzBA,yBAAyB,gCAAzBA,yBAAyB,0CAAzBA,yBAAyB,8BAAzBA,yBAAyB,kDAAzBA,yBAAyB,8CAAzBA,yBAAyB,0CAAzBA,yBAAyB,oDAAzBA,yBAAyB,gDAAzBA,yBAAyB,4CAAzBA,yBAAyB,gDAAzBA,yBAAyB,+CAAzBA,yBAAyB,qCAAzBA,yBAAyB"}