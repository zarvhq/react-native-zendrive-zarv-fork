{"version":3,"names":["ZendriveFeedbackDriveCategory"],"sources":["Feedback.ts"],"sourcesContent":["import { ZendriveEventType } from './Infos';\n\nexport enum ZendriveFeedbackDriveCategory {\n  /**\n   * Indicates that the trip was taken on a bicycle\n   */\n  BICYCLE = 'bicycle',\n  /**\n   * Indicates that the trip was taken in a bus\n   */\n  BUS = 'bus',\n  /**\n   * Indicates that the trip was taken in a car\n   */\n  CAR = 'car',\n  /**\n   * Indicates that the trip was taken in a car and the user was the driver\n   */\n  CAR_DRIVER = 'car-driver',\n  /**\n   * Indicates that the trip was taken in a car and the user was a passenger\n   */\n  CAR_PASSENGER = 'car-passenger',\n  /**\n   * Indicates that the trip was taken using some form of air travel\n   */\n  FLIGHT = 'flight',\n  /**\n   * Indicates that the trip was taken on foot (either walking or running)\n   */\n  FOOT = 'foot',\n  /**\n   * Indicates that there wasn't enough movement and this shouldn't have been detected as a trip\n   */\n  INVALID = 'invalid',\n  /**\n   * Indicates that the trip was taken on a motorcycle\n   */\n  MOTORCYCLE = 'motorcycle',\n  /**\n   * Indicates that the trip was not taken in a car.\n   */\n  NOT_CAR = 'not-car',\n  /**\n   * Fallback when the above options do not cover the use case.\n   */\n  OTHER = 'other',\n  /**\n   * Indicates that the trip was taken in a train or a subway\n   */\n  TRAIN = 'train',\n  /**\n   * Indicates that the trip was taken using some form of public transit (bus/train/subway/tram etc)\n   */\n  TRANSIT = 'transit',\n}\n\n/**\n * Provide feedback on a trip or events\n */\nexport interface ZendriveFeedback {\n  /**\n   * Help Zendrive improve by providing feedback for a drive detected by the SDK\n   * If the SDK is not setup, this method is a no-op.\n   * @param driveId as returned at the end of drive in [[DriveInfo#driveId]]\n   * @param category the category that best indicates the type of Drive, see [[ZendriveFeedbackDriveCategory]]\n   */\n  addDriveCategory(\n    driveId: string,\n    category: ZendriveFeedbackDriveCategory\n  ): Promise<boolean>;\n\n  /**\n   * Help Zendrive improve by providing information about whether an event detected by the SDK occurred or not\n   * If the SDK is not setup, this method is a no-op.\n   * @param driveId as returned at the end of drive in [[DriveInfo#driveId]] which this event is part of\n   * @param eventTimestamp as returned by [[ZendriveEvent#startTimestampMillis]]\n   * @param eventType as returned by [[ZendriveEvent#eventType]]\n   * @param occurrence whether the event occurred or not\n   */\n  addEventOccurrence(\n    driveId: string,\n    eventTimestamp: number,\n    eventType: ZendriveEventType,\n    occurrence: boolean\n  ): Promise<boolean>;\n}\n"],"mappings":"yGAEYA,8BAA6B,+EAA7BA,6BAA6B,EAA7BA,6BAA6B,sBAA7BA,6BAA6B,cAA7BA,6BAA6B,cAA7BA,6BAA6B,4BAA7BA,6BAA6B,kCAA7BA,6BAA6B,oBAA7BA,6BAA6B,gBAA7BA,6BAA6B,sBAA7BA,6BAA6B,4BAA7BA,6BAA6B,sBAA7BA,6BAA6B,kBAA7BA,6BAA6B,kBAA7BA,6BAA6B,yBAA7BA,6BAA6B,yCAA7BA,6BAA6B"}