import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import{DeviceEventEmitter,NativeEventEmitter,NativeModules,Platform}from'react-native';import{ZendriveCallbackEventKind}from'./sdk/Events';var callbackEventMappings={'com.zendrive.onDriveStart':ZendriveCallbackEventKind.ON_DRIVE_START,'com.zendrive.onDriveResume':ZendriveCallbackEventKind.ON_DRIVE_RESUME,'com.zendrive.onDriveEnd':ZendriveCallbackEventKind.ON_DRIVE_END,'com.zendrive.onDriveAnalyzed':ZendriveCallbackEventKind.ON_DRIVE_ANALYZED,'com.zendrive.onAccident':ZendriveCallbackEventKind.ON_ACCIDENT,'com.zendrive.onPotentialAccident':ZendriveCallbackEventKind.ON_POTENTIAL_ACCIDENT,'com.zendrive.onSettingsChanged':ZendriveCallbackEventKind.ON_SETTINGS_CHANGED,'com.zendrive.onLocationApproved':ZendriveCallbackEventKind.ON_LOCATION_APPROVED,'com.zendrive.onLocationDenied':ZendriveCallbackEventKind.ON_LOCATION_DENIED,'com.zendrive.onActivityApproved':ZendriveCallbackEventKind.ON_ACTIVITY_APPROVED,'com.zendrive.onActivityDenied':ZendriveCallbackEventKind.ON_ACTIVITY_DENIED,'com.zendrive.onBootCompleted':ZendriveCallbackEventKind.ON_BOOT_COMPLETED,'com.zendrive.onMyPackageReplaced':ZendriveCallbackEventKind.ON_MY_PACKAGE_REPLACED};var RNEventHandler=function(){function RNEventHandler(){_classCallCheck(this,RNEventHandler);this.emitter=Platform.OS==='ios'?new NativeEventEmitter(NativeModules.ZendriveEventEmitter):DeviceEventEmitter;this.listeners=new Map();}_createClass(RNEventHandler,[{key:"register",value:function register(callbackHandler){var _this=this;var _loop=function _loop(){if(callbackEventMappings.hasOwnProperty(eventName)){var sdkEvent=callbackEventMappings[eventName];var listener=function listener(event){callbackHandler({kind:sdkEvent,event:event});};_this.listeners.set(eventName,listener);_this.emitter.addListener(eventName,listener);}};for(var eventName in callbackEventMappings){_loop();}}},{key:"unregister",value:function unregister(){for(var eventName in callbackEventMappings){if(callbackEventMappings.hasOwnProperty(eventName)){var listener=this.listeners.get(eventName);if(listener){this.emitter.removeAllListeners(eventName);}this.listeners.delete(eventName);}}}}]);return RNEventHandler;}();export{RNEventHandler as default};
//# sourceMappingURL=RNEventHandler.js.map