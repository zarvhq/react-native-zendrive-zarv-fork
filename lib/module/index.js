import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import{NativeModules,Platform,Image}from'react-native';import{ZendriveErrorCode}from'./sdk/Errors';import RNEventHandler from'./RNEventHandler';import AndroidPermissionsHandler from'./AndroidPermissionsHandler';import IOSPermissionsHandler from'./IOSPermissionsHandler';export*from'./sdk/Infos';export*from'./sdk/Errors';export*from'./sdk/Insurance';export*from'./sdk/Events';export*from'./sdk/Feedback';var _ref=NativeModules,Zendrive=_ref.Zendrive,ZendriveInsurance=_ref.ZendriveInsurance,ZendriveFeedback=_ref.ZendriveFeedback,ZendriveDebug=_ref.ZendriveDebug;var ZendriveNativeModule=Zendrive;var ZendriveInsuranceNativeModule=ZendriveInsurance;var ZendriveFeedbackNativeModule=ZendriveFeedback;var ZendriveDebugNativeModule=ZendriveDebug;var ZendriveDebugImpl=function(){function ZendriveDebugImpl(){_classCallCheck(this,ZendriveDebugImpl);}_createClass(ZendriveDebugImpl,[{key:"isZendriveSessionIdentifier",value:function isZendriveSessionIdentifier(identifier){return ZendriveDebugNativeModule.isZendriveSessionIdentifier(identifier);}},{key:"handleEventsForBackgroundURLSession",value:function handleEventsForBackgroundURLSession(identifier){return ZendriveDebugNativeModule.handleEventsForBackgroundURLSession(identifier);}},{key:"uploadAllZendriveData",value:function uploadAllZendriveData(zendriveConfiguration,notificationConfiguration){if(Platform.OS==='ios'){return ZendriveDebugNativeModule.uploadAllZendriveData(zendriveConfiguration);}return ZendriveDebugNativeModule.uploadAllZendriveData(zendriveConfiguration,notificationConfiguration);}}]);return ZendriveDebugImpl;}();var ZendriveFeedbackImpl=function(){function ZendriveFeedbackImpl(){_classCallCheck(this,ZendriveFeedbackImpl);}_createClass(ZendriveFeedbackImpl,[{key:"addDriveCategory",value:function addDriveCategory(driveId,category){return ZendriveFeedbackNativeModule.addDriveCategory(driveId,category);}},{key:"addEventOccurrence",value:function addEventOccurrence(driveId,eventTimestamp,eventType,occurrence){return ZendriveFeedbackNativeModule.addEventOccurrence(driveId,eventTimestamp,eventType,occurrence);}}]);return ZendriveFeedbackImpl;}();var ZendriveInsuranceImpl=function(){function ZendriveInsuranceImpl(){_classCallCheck(this,ZendriveInsuranceImpl);}_createClass(ZendriveInsuranceImpl,[{key:"startDriveWithPeriod1",value:function startDriveWithPeriod1(){return ZendriveInsuranceNativeModule.startDriveWithPeriod1();}},{key:"startDriveWithPeriod2",value:function startDriveWithPeriod2(trackingId){if(trackingId){return ZendriveInsuranceNativeModule.startDriveWithPeriod2(trackingId);}else{var err={isSuccess:false,errorCode:ZendriveErrorCode.INVALID_PARAMS,errorMessage:'trackingId cannot be empty'};return Promise.resolve(err);}}},{key:"startDriveWithPeriod3",value:function startDriveWithPeriod3(trackingId){if(trackingId){return ZendriveInsuranceNativeModule.startDriveWithPeriod3(trackingId);}else{var err={isSuccess:false,errorCode:ZendriveErrorCode.INVALID_PARAMS,errorMessage:'trackingId cannot be empty'};return Promise.resolve(err);}}},{key:"stopPeriod",value:function stopPeriod(){return ZendriveInsuranceNativeModule.stopPeriod();}}]);return ZendriveInsuranceImpl;}();var ZendriveImpl=function(){function ZendriveImpl(){_classCallCheck(this,ZendriveImpl);this.eventHandlers=[];this.nativeEventHandler=new RNEventHandler();this.callbackHandler=function(){};this._insurance=new ZendriveInsuranceImpl();this._feedback=new ZendriveFeedbackImpl();this._debug=new ZendriveDebugImpl();this._permissions=Platform.OS==='android'?new AndroidPermissionsHandler():new IOSPermissionsHandler();}_createClass(ZendriveImpl,[{key:"getActiveDriveInfo",value:function getActiveDriveInfo(){return ZendriveNativeModule.getActiveDriveInfo();}},{key:"getBuildVersion",value:function getBuildVersion(){return ZendriveNativeModule.getBuildVersion();}},{key:"getEventSupportForDevice",value:function getEventSupportForDevice(){return ZendriveNativeModule.getEventSupportForDevice();}},{key:"getZendriveSettings",value:function getZendriveSettings(){return ZendriveNativeModule.getZendriveSettings();}},{key:"isAccidentDetectionSupported",value:function isAccidentDetectionSupported(){return ZendriveNativeModule.isAccidentDetectionSupported();}},{key:"isSDKSetup",value:function isSDKSetup(){return ZendriveNativeModule.isSDKSetup();}},{key:"isValidInputParameter",value:function isValidInputParameter(input){if(input){return ZendriveNativeModule.isValidInputParameter(input);}else{return Promise.resolve(false);}}},{key:"resume",value:function resume(){return ZendriveNativeModule.resume();}},{key:"setup",value:function setup(configuration){if(configuration.notificationSettings){if(configuration.notificationSettings.inDriveSettings&&configuration.notificationSettings.inDriveSettings.smallIcon){configuration.notificationSettings.inDriveSettings.smallIcon=Image.resolveAssetSource(configuration.notificationSettings.inDriveSettings.smallIcon).uri;}if(configuration.notificationSettings.mayBeInDriveSettings&&configuration.notificationSettings.mayBeInDriveSettings.smallIcon){configuration.notificationSettings.mayBeInDriveSettings.smallIcon=Image.resolveAssetSource(configuration.notificationSettings.mayBeInDriveSettings.smallIcon).uri;}if(configuration.notificationSettings.waitingForDriveSettings&&configuration.notificationSettings.waitingForDriveSettings.smallIcon){configuration.notificationSettings.waitingForDriveSettings.smallIcon=Image.resolveAssetSource(configuration.notificationSettings.waitingForDriveSettings.smallIcon).uri;}}if(configuration.managesLocationPermission===true&&Platform.OS==='ios'&&__DEV__){console.warn('managesLocationPermission is deprecated.');}if(configuration.managesActivityPermission===true&&Platform.OS==='ios'&&__DEV__){console.warn('managesActivityPermission is deprecated.');}return ZendriveNativeModule.setup(configuration);}},{key:"setZendriveDriveDetectionMode",value:function setZendriveDriveDetectionMode(driveDetectionMode){return ZendriveNativeModule.setZendriveDriveDetectionMode(driveDetectionMode);}},{key:"startDrive",value:function startDrive(trackingId){return ZendriveNativeModule.startDrive(trackingId||'');}},{key:"startSession",value:function startSession(sessionId){if(sessionId){return ZendriveNativeModule.startSession(sessionId);}else{var err={isSuccess:false,errorCode:ZendriveErrorCode.INVALID_PARAMS,errorMessage:'session id cannot be empty'};return Promise.resolve(err);}}},{key:"refreshBusinessHours",value:function refreshBusinessHours(){return ZendriveNativeModule.refreshBusinessHours();}},{key:"autoTrackingPausedReason",value:function autoTrackingPausedReason(){return ZendriveNativeModule.autoTrackingPausedReason();}},{key:"stopManualDrive",value:function stopManualDrive(){return ZendriveNativeModule.stopManualDrive();}},{key:"stopSession",value:function stopSession(){return ZendriveNativeModule.stopSession();}},{key:"teardown",value:function teardown(){return ZendriveNativeModule.teardown();}},{key:"triggerMockAccident",value:function triggerMockAccident(confidence){return ZendriveNativeModule.triggerMockAccident(confidence);}},{key:"triggerMockPotentialAccident",value:function triggerMockPotentialAccident(config){return ZendriveNativeModule.triggerMockPotentialAccident(config);}},{key:"uploadAllDebugDataAndLogs",value:function uploadAllDebugDataAndLogs(){return ZendriveNativeModule.uploadAllDebugDataAndLogs();}},{key:"wipeOut",value:function wipeOut(){return ZendriveNativeModule.wipeOut();}},{key:"getZendriveState",value:function getZendriveState(){return ZendriveNativeModule.getZendriveState();}},{key:"insurance",value:function insurance(){return this._insurance;}},{key:"feedback",value:function feedback(){return this._feedback;}},{key:"debug",value:function debug(){return this._debug;}},{key:"permissions",value:function permissions(){return this._permissions;}},{key:"getZendriveDriverCustomAttributes",value:function getZendriveDriverCustomAttributes(attributes){if(Platform.OS==='ios'){throw new Error('not supported on ios platform, configuration already provides custom attributes');}return ZendriveNativeModule.getZendriveDriverCustomAttributes(attributes);}},{key:"associateVehicle",value:function associateVehicle(vehicleInfo){return ZendriveNativeModule.associateVehicle(vehicleInfo);}},{key:"dissociateVehicle",value:function dissociateVehicle(vehicleId){return ZendriveNativeModule.dissociateVehicle(vehicleId);}},{key:"getAssociatedVehicles",value:function getAssociatedVehicles(){return ZendriveNativeModule.getAssociatedVehicles();}},{key:"getBluetoothPairedDevices",value:function getBluetoothPairedDevices(){return ZendriveNativeModule.getBluetoothPairedDevices();}},{key:"getNearbyBeacons",value:function getNearbyBeacons(uuid){return ZendriveNativeModule.getNearbyBeacons(uuid);}},{key:"getNearbyBeaconsWithRange",value:function getNearbyBeaconsWithRange(uuid,major,minor){return ZendriveNativeModule.getNearbyBeaconsWithRange(uuid,major,minor);}},{key:"pauseAutoDriveTracking",value:function pauseAutoDriveTracking(pausedTillTimestamp){return ZendriveNativeModule.pauseAutoDriveTracking(pausedTillTimestamp);}},{key:"resumeAutoDriveTracking",value:function resumeAutoDriveTracking(){return ZendriveNativeModule.resumeAutoDriveTracking();}},{key:"isAutoTripTrackingPaused",value:function isAutoTripTrackingPaused(){return ZendriveNativeModule.isAutoTripTrackingPaused();}},{key:"logSDKHealth",value:function logSDKHealth(sdkHealthReason){return ZendriveNativeModule.logSDKHealth(sdkHealthReason);}},{key:"registerZendriveCallbackEventListener",value:function registerZendriveCallbackEventListener(handler){var _this=this;if(this.eventHandlers.length===0){this.callbackHandler=function(event){_this.eventHandlers.forEach(function(fn){return fn(event);});};this.nativeEventHandler.register(this.callbackHandler);}this.eventHandlers.push(handler);}},{key:"unregisterZendriveCallbackEventListener",value:function unregisterZendriveCallbackEventListener(handler){this.eventHandlers=this.eventHandlers.filter(function(item){return item!==handler;});if(this.eventHandlers.length===0){this.nativeEventHandler.unregister();this.callbackHandler=function(){};}}}]);return ZendriveImpl;}();var ZendriveSDK=new ZendriveImpl();export default ZendriveSDK;
//# sourceMappingURL=index.js.map